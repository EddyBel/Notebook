{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    h4: \"h4\",\n    h5: \"h5\",\n    h6: \"h6\",\n    p: \"p\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    em: \"em\",\n    blockquote: \"blockquote\",\n    pre: \"pre\",\n    code: \"code\",\n    img: \"img\"\n  }, _provideComponents(), props.components), {Underlined} = _components;\n  if (!Underlined) _missingMdxReference(\"Underlined\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"prueba de contenido\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"prueba de contenido\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"prueba de contenido\"\n    }), \"\\n\", _jsx(_components.h4, {\n      children: \"prueba de contenido\"\n    }), \"\\n\", _jsx(_components.h5, {\n      children: \"prueba de contenido\"\n    }), \"\\n\", _jsx(_components.h6, {\n      children: \"prueba de contenido\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Prueba de textos\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"lista\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"prueba\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"prueba dos\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"prueba 3\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(Underlined, {\n      words: [\"texto\", \"subrallado\"],\n      children: _jsx(_components.p, {\n        children: \"Prueba de texto subrallado\"\n      })\n    }), \"\\n\", _jsx(Underlined, {\n      words: [\"Este es un mensaje subrallado\"],\n      children: _jsx(_components.p, {\n        children: \"Este es un mensaje subrallado\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Texto tachado \", _jsx(_components.strong, {\n        children: \"EWER\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Prueba de \", _jsx(_components.strong, {\n        children: \"contenido\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Prueba de \", _jsx(_components.em, {\n        children: \"contenido\"\n      })]\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"prueba de \", _jsx(_components.em, {\n        children: \"contenido\"\n      })]\n    }), \"\\n\", _jsxs(_components.blockquote, {\n      children: [\"\\n\", _jsx(_components.p, {\n        children: \"Prueba de contenido\"\n      }), \"\\n\", _jsxs(_components.blockquote, {\n        children: [\"\\n\", _jsx(_components.p, {\n          children: \"Segunda cita\"\n        }), \"\\n\", _jsxs(_components.blockquote, {\n          children: [\"\\n\", _jsx(_components.p, {\n            children: \"Tercera cita\"\n          }), \"\\n\"]\n        }), \"\\n\"]\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.em, {\n        children: \"Este es un texto subrallado\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"const { app, BrowserWindow } = require(\\\"electron\\\");\\nconst path = require(\\\"path\\\");\\n\\nfunction createWindow() {\\n  const win = new BrowserWindow({\\n    width: 800,\\n    height: 600,\\n    webPreferences: {\\n      preload: path.join(__dirname, \\\"preload.js\\\"),\\n    },\\n  });\\n\\n  win.loadFile(\\\"index.html\\\");\\n}\\n\\napp.whenReady().then(() => {\\n  createWindow();\\n\\n  app.on(\\\"activate\\\", () => {\\n    if (BrowserWindow.getAllWindows().length === 0) {\\n      createWindow();\\n    }\\n  });\\n});\\n\\napp.on(\\\"window-all-closed\\\", () => {\\n  if (process.platform !== \\\"darwin\\\") {\\n    app.quit();\\n  }\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.img, {\n        src: \"https://images.pexels.com/photos/2246476/pexels-photo-2246476.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1\",\n        alt: \"Preview de imagen\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-python\",\n        children: \"import pytube\\n\\nyt = pytube.YouTube(url)\\ndata = yt.strams.filter(type='video')\\n\\nconsole.log(data)\\n\\nif data:\\n  print('Hello world')\\n\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-json\",\n        children: \"\\\"Main\\\": \\\"main.js\\\",\\n\\\"Prueba\\\": \\\"prueba\\\"\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"frontmatter":{"route":"test-document","title":"Test de archivo de markdown","description":"prueba de mardown","date":"8/16/2022","language":"JS","files":["main.js","main.py"],"front":"https://images.pexels.com/photos/12663061/pexels-photo-12663061.jpeg?auto=compress&cs=tinysrgb&w=1260&h=750&dpr=1","important":true},"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {jsx: _jsx} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\"\n  }, _provideComponents(), props.components);\n  return _jsx(_components.p, {\n    children: \"[object Object]\"\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}}},"__N_SSG":true}