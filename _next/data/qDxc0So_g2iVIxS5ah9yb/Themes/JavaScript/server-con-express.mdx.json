{"pageProps":{"source":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    p: \"p\",\n    pre: \"pre\",\n    code: \"code\",\n    strong: \"strong\",\n    em: \"em\"\n  }, _provideComponents(), props.components);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"Como hacer servidor con nodejs\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Crear un archivo pakage.json para iniciar con el comando.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"npm init\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Instalar la libreria de express con el comando.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-bash\",\n        children: \"npm install express --save\\n\"\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Crear el archivo de script llamado como guste, ejemplo \", _jsx(_components.strong, {\n        children: \"index.js\"\n      }), \". En el se importara la libreria y se ejecutara.\"]\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"const express = require(\\\"express\\\"); //Importar la libreria\\nconst app = express(); //Ejecutar la libreria\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Especificar el archivo que se enviara con su funcion get.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"app.get(\\\"/\\\", (req, res) => {\\n  res.send(\\\"Hello World\\\"); //Enviaremos un texto plano 'Hello World'\\n});\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Definir el puerto donde se ejecutara el servidor.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"app.listen(9090); //Escuchara en el puerto 9090\\n\"\n      })\n    }), \"\\n\", _jsx(_components.p, {\n      children: _jsx(_components.em, {\n        children: \"Archivo completo index.js\"\n      })\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsx(_components.code, {\n        className: \"language-js\",\n        children: \"const express = require(\\\"express\\\"); //Importar la libreria\\nconst app = express(); //Ejecutar la libreria\\n\\napp.get(\\\"/\\\", (req, res) => {\\n  res.send(\\\"Hello World\\\"); //Enviaremos un texto plano 'Hello World'\\n});\\n\\napp.listen(9090); //Escuchara en el puerto 9090\\n\"\n      })\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\n","frontmatter":{},"scope":{}},"frontmatter":{"title":"Servidor con express","description":"Servidor simple con la libreria express.","date":"09-09-2022","matter":"Nodejs","theme":"Express, Servidor, Nodejs","files":[],"front":"","level":"Basico","important":false}},"__N_SSG":true}